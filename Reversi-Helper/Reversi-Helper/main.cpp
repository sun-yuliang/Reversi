/*********************************************************
                       ∂‘∫⁄∆Âπ¿÷µ
*********************************************************/
#include <iostream>
#include <iomanip>
#include <vector>
#include <fstream>
#include <sstream>
using namespace std;
#define black 1
#define white -1

/*»´æ÷±‰¡ø«¯*/
double p_mob = 0;    //current mobility
double p_div = 0;    //divergence------------------potential mobility
double p_squ = 0;    //adjacent squares------------potential mobility 
double p_fro = 0;    //frontier discs--------------potential mobility
double p_sta = 0;    //edge stable discs

int board0[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board111[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board112[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board113[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0, 0,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board114[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0, 0,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board115[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0, 0,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board116[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0, 0,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board117[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board118[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0, 0, 0,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board119[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board120[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0,-1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board121[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 1, 1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board122[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 1,-1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board123[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1,-1,-1, 0, 0, 9 },
	{ 9, 0, 1,-1, 1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board124[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1, 1,-1,-1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board125[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1,-1,-1, 1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1, 1, 1, 0, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board126[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1,-1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1, 1, 1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board127[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1, 1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1, 1, 1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1, 1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board128[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0,-1, 0, 1, 1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board129[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1, 0, 0, 0, 9 },
	{ 9, 0, 1, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 1, 0, 1, 1,-1,-1, 0, 9 },
	{ 9, 0, 1, 1, 1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board130[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1, 0, 0, 0, 9 },
	{ 9, 0, 1, 0, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board131[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1, 0, 0, 0, 9 },
	{ 9, 0, 1, 1, 1, 1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1, 1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board132[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1,-1, 0, 0, 9 },
	{ 9, 0, 1, 1, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board133[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0, 1,-1, 0, 0, 9 },
	{ 9, 0, 1, 1, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board134[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1,-1, 0, 0, 9 },
	{ 9, 0, 1, 1, 1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board135[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1,-1, 0, 0, 9 },
	{ 9, 0, 1, 1, 1, 1, 1, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board136[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 0, 0, 9 },
	{ 9, 0,-1,-1,-1,-1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board137[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0, 0, 0,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 0, 0, 9 },
	{ 9, 1, 1, 1, 1, 1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board138[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1, 0,-1,-1, 0, 0, 9 },
	{ 9,-1, 1,-1,-1, 1, 1, 0, 0, 9 },
	{ 9, 1, 1,-1, 1,-1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board139[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0, 0,-1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1, 1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 0, 0, 9 },
	{ 9, 1, 1,-1, 1,-1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board140[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 0, 0, 9 },
	{ 9, 1, 1,-1,-1,-1, 1,-1, 0, 9 },
	{ 9, 0, 1,-1,-1, 1,-1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board141[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 0, 0, 9 },
	{ 9, 1, 1,-1,-1,-1, 1, 1, 1, 9 },
	{ 9, 0, 1,-1,-1, 1,-1, 1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board142[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 0,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1,-1,-1, 1, 1, 0, 0, 9 },
	{ 9,-1,-1,-1,-1,-1, 1, 1, 1, 9 },
	{ 9,-1,-1,-1,-1, 1,-1, 1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board143[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 0, 0, 9 },
	{ 9,-1,-1,-1, 1,-1, 1, 1, 1, 9 },
	{ 9,-1,-1,-1,-1, 1,-1, 1,-1, 9 },
	{ 9, 0, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board144[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 0, 0, 9 },
	{ 9,-1,-1,-1, 1,-1, 1, 1, 1, 9 },
	{ 9,-1,-1,-1,-1, 1,-1, 1,-1, 9 },
	{ 9,-1,-1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 0, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board145[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 0, 0, 9 },
	{ 9,-1, 1,-1, 1, 1, 1, 1, 1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1, 1,-1, 9 },
	{ 9,-1, 1, 1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board146[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1,-1,-1,-1,-1, 0, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1, 1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1,-1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board147[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0, 0, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 1, 1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1, 1, 1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board148[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 0, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1,-1,-1,-1,-1, 0,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1, 1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board149[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1, 1,-1,-1,-1, 0,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1, 1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1, 1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board150[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1, 0, 0, 0, 9 },
	{ 9, 0, 1, 1,-1,-1,-1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board151[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1, 0, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1, 1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1, 1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0, 0, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board152[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1, 0, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1, 1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1, 1,-1, 0, 0, 9 },
	{ 9, 0,-1, 0, 1, 1, 1, 0, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board153[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1, 0, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1, 1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1, 1, 1, 0, 0, 9 },
	{ 9, 0,-1, 0, 1, 1, 1, 1, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board154[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1,-1, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1,-1,-1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1,-1,-1, 9 },
	{ 9,-1, 1,-1, 1,-1, 1,-1,-1, 9 },
	{ 9,-1, 1, 1,-1, 1, 1,-1,-1, 9 },
	{ 9, 0, 1,-1, 1, 1, 1, 0, 0, 9 },
	{ 9, 0,-1, 0, 1, 1, 1, 1, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board155[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1,-1, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1,-1, 1, 9 },
	{ 9,-1, 1, 1, 1, 1, 1,-1, 1, 9 },
	{ 9,-1, 1,-1, 1, 1,-1,-1, 1, 9 },
	{ 9,-1, 1,-1, 1,-1, 1,-1, 1, 9 },
	{ 9,-1, 1, 1,-1, 1, 1, 1, 1, 9 },
	{ 9, 0, 1,-1, 1, 1, 1, 0, 1, 9 },
	{ 9, 0,-1, 0, 1, 1, 1, 1, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã
int board156[10][10] = {
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
	{ 9, 0, 1, 0,-1,-1,-1, 0, 1, 9 },
	{ 9, 0, 1, 1,-1,-1,-1,-1, 1, 9 },
	{ 9,-1, 1, 1, 1, 1,-1,-1, 1, 9 },
	{ 9,-1, 1,-1, 1,-1,-1,-1, 1, 9 },
	{ 9,-1, 1,-1,-1,-1, 1,-1, 1, 9 },
	{ 9,-1, 1,-1,-1, 1, 1, 1, 1, 9 },
	{ 9, 0,-1,-1, 1, 1, 1, 0, 1, 9 },
	{ 9,-1,-1, 0, 1, 1, 1, 1, 0, 9 },
	{ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
};    //∆Â≈Ã

int edge[10] = { 9, 0, 0, 0, 0, 0, 0, 0, 0, 9 };
int stable[10] = { 9,1,1,1,1,1,1,1,1,9 };
int stable_b[6561];
int stable_w[6561];

bool isvalid(int board[][10], int loc, char who)
{
	char i = 0;
	char const r = loc / 10;
	char const c = loc % 10;    //––¡–
	if (board[r][c] != 0)  return false;    //∏√Œª÷√”–∆Â◊”   	
	//≈–∂œÀº¬∑£∫œ»≈–∂œœ‡¡⁄◊” «∑Ò «∂‘∑Ωµƒ£¨»Ù «£¨À≥’‚Ãıœﬂ’“Œ“∑Ωµƒ◊”£¨÷–º‰”–ø’µµbreak	
	if (board[r - 1][c] == -who)    //…œ  
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r - i][c] == 0) break;
			else if (board[r - i][c] == who) return true;
		}
	}
	if (board[r + 1][c] == -who)    //œ¬    
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r + i][c] == 0) break;
			else if (board[r + i][c] == who) return true;
		}
	}
	if (board[r][c - 1] == -who)    //◊Û  
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r][c - i] == 0) break;
			else if (board[r][c - i] == who) return true;
		}
	}
	if (board[r][c + 1] == -who)    //”“   
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r][c + i] == 0) break;
			else if (board[r][c + i] == who) return true;
		}
	}
	if (board[r - 1][c - 1] == -who)    //◊Û…œ	 
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r - i][c - i] == 0) break;
			else if (board[r - i][c - i] == who) return true;
		}
	}
	if (board[r - 1][c + 1] == -who)    //”“…œ
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r - i][c + i] == 0) break;
			else if (board[r - i][c + i] == who) return true;
		}
	}
	if (board[r + 1][c - 1] == -who)	//◊Ûœ¬
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r + i][c - i] == 0) break;
			else if (board[r + i][c - i] == who) return true;
		}
	}
	if (board[r + 1][c + 1] == -who)	//”“œ¬	 
	{
		for (i = 2; i <= 7; i++)
		{
			if (board[r + i][c + i] == 0) break;
			else if (board[r + i][c + i] == who) return true;
		}
	}
	return false;    //»Áπ˚∂º≤ª¬˙◊„
}

void move_edge(int edge[], int c, char who)
{
	char i = 0, j = 0;
	edge[c] = who;
	if (edge[c - 1] == -who)	//◊Û
	{
		for (i = 2; i <= 7; i++)
		{
			if (edge[c - i] == 0) break;
			else if (edge[c - i] == who)
			{
				for (j = c - 1; j >= c - i + 1; j--) edge[j] = who;
				break;
			}
		}
	}
	if (edge[c + 1] == -who)    //”“
	{
		for (i = 2; i <= 7; i++)
		{
			if (edge[c + i] == 0) break;
			else if (edge[c + i] == who)
			{
				for (j = c + 1; j <= c + i - 1; j++) edge[j] = who;
				break;
			}
		}
	}
}

int count(int inp[], char who)
{
	int count = 0;
	char i = 0;
	for (i = 1; i <= 8; i++)
		if (inp[i] == who) count++;
	return count;
}

double CurrentMobility(int board[][10])    
{
	double count_b = 0, count_w = 0;
	char i = 0, j = 0;
	for (i = 1; i <= 8; i++)
	{
		for (j = 1; j <= 8; j++)
		{
			if (isvalid(board, 10 * i + j, black)) count_b++;    //∫⁄∆Âø…¬‰◊”µ„
			if (isvalid(board, 10 * i + j, white)) count_w++;    //∞◊∆Âø…¬‰◊”µ„
		}
	}
	return (1000 * (count_b - count_w) / (count_b + count_w + 2));
}

double PotentialMobility(int board[][10])
{
	double div_b = 0, div_w = 0, squ_b = 0, squ_w = 0, fro_b = 0, fro_w = 0;
	char i = 0, j = 0;
	bool temp_b[10][10], temp_w[10][10];
	for (i = 0; i < 10; i++)    //≥ı ºªØº«¬ºœ‡¡⁄ø’∏Òµƒ ˝◊È
	{
		for (j = 0; j < 10; j++)
		{
			temp_b[i][j] = 0;
			temp_w[i][j] = 0;
		}
	}
	for (i = 1; i <= 8; i++)
	{
		for (j = 1; j <= 8; j++)
		{
			if (board[i][j] == black)    
			{
				if (board[i - 1][j - 1] == 0) { div_b++; temp_b[i - 1][j - 1] = 1; }
				if (board[i - 1][j] == 0)     { div_b++; temp_b[i - 1][j] = 1; }
				if (board[i - 1][j + 1] == 0) { div_b++; temp_b[i - 1][j + 1] = 1; }
				if (board[i][j - 1] == 0)     { div_b++; temp_b[i][j - 1] = 1; }
				if (board[i][j + 1] == 0)     { div_b++; temp_b[i][j + 1] = 1; }
				if (board[i + 1][j - 1] == 0) { div_b++; temp_b[i + 1][j - 1] = 1; }
				if (board[i + 1][j] == 0)     { div_b++; temp_b[i + 1][j] = 1; }
				if (board[i + 1][j + 1] == 0) { div_b++; temp_b[i + 1][j + 1] = 1; }
				if (board[i - 1][j - 1] == 0 || board[i - 1][j] == 0 || board[i - 1][j + 1] == 0 || board[i][j - 1] == 0
					|| board[i][j + 1] == 0 || board[i + 1][j - 1] == 0 || board[i + 1][j] == 0 || board[i + 1][j + 1] == 0) fro_b++;
			}
		}
	}
	for (i = 1; i <= 8; i++)
	{
		for (j = 1; j <= 8; j++)
		{
			if (board[i][j] == white)
			{
				if (board[i - 1][j - 1] == 0) { div_w++; temp_w[i - 1][j - 1] = 1; }
				if (board[i - 1][j] == 0)     { div_w++; temp_w[i - 1][j] = 1; }
				if (board[i - 1][j + 1] == 0) { div_w++; temp_w[i - 1][j + 1] = 1; }
				if (board[i][j - 1] == 0)     { div_w++; temp_w[i][j - 1] = 1; }
				if (board[i][j + 1] == 0)     { div_w++; temp_w[i][j + 1] = 1; }
				if (board[i + 1][j - 1] == 0) { div_w++; temp_w[i + 1][j - 1] = 1; }
				if (board[i + 1][j] == 0)     { div_w++; temp_w[i + 1][j] = 1; }
				if (board[i + 1][j + 1] == 0) { div_w++; temp_w[i + 1][j + 1] = 1; }
				if (board[i - 1][j - 1] == 0 || board[i - 1][j] == 0 || board[i - 1][j + 1] == 0 || board[i][j - 1] == 0
					|| board[i][j + 1] == 0 || board[i + 1][j - 1] == 0 || board[i + 1][j] == 0 || board[i + 1][j + 1] == 0) fro_w++;
			}
		}
	}
	for (i = 1; i <= 8; i++)
	{
		for (j = 1; j <= 8; j++)
		{
			if (temp_b[i][j] == 1) squ_b++;
			if (temp_w[i][j] == 1) squ_w++;
		}
	}
	return (1000 * (p_div * (div_w - div_b) / (div_w + div_b + 2) 
				  + p_squ * (squ_w - squ_b) / (squ_w + squ_b + 2) 
				  + p_fro * (fro_w - fro_b) / (fro_w + fro_b + 2)));
}

double EdgeStableDiscs(int board[][10])
{
	int i = 0, index = 0, count_b = 0, count_w = 0;
	index = 3 * (3 * (3 * (3 * (3 * (3 * (3 * (board[1][1] + 1) + board[1][2] + 1) + board[1][3] + 1) + board[1][4] + 1) + board[1][5] + 1) + board[1][6] + 1) + board[1][7] + 1) + board[1][8] + 1;
	count_b += stable_b[index];
	count_w += stable_w[index];
	index = 3 * (3 * (3 * (3 * (3 * (3 * (3 * (board[8][1] + 1) + board[8][2] + 1) + board[8][3] + 1) + board[8][4] + 1) + board[8][5] + 1) + board[8][6] + 1) + board[8][7] + 1) + board[8][8] + 1;
	count_b += stable_b[index];
	count_w += stable_w[index];
	index = 3 * (3 * (3 * (3 * (3 * (3 * (3 * (board[1][1] + 1) + board[2][1] + 1) + board[3][1] + 1) + board[4][1] + 1) + board[5][1] + 1) + board[6][1] + 1) + board[7][1] + 1) + board[8][1] + 1;
	count_b += stable_b[index];
	count_w += stable_w[index];
	index = 3 * (3 * (3 * (3 * (3 * (3 * (3 * (board[1][8] + 1) + board[2][8] + 1) + board[3][8] + 1) + board[4][8] + 1) + board[5][8] + 1) + board[6][8] + 1) + board[7][8] + 1) + board[8][8] + 1;
	count_b += stable_b[index];
	count_w += stable_w[index];
	if (board[1][1] == black) count_b--;
	if (board[1][8] == black) count_b--;
	if (board[8][1] == black) count_b--;
	if (board[8][8] == black) count_b--;
	if (board[1][1] == white) count_w--;
	if (board[1][8] == white) count_w--;
	if (board[8][1] == white) count_w--;
	if (board[8][8] == white) count_w--;
	return (1000 * (count_b - count_w) / (count_b + count_w + 2));
}

double evaluate(int board[][10])
{
	return (p_mob * CurrentMobility(board) + PotentialMobility(board) + p_sta * EdgeStableDiscs(board));
}

int stable_it(int inp[], int edge[])
{
	int temp[10], way[8], i = 0, j = 0, k = 0, count = 0;

	if (inp[1] != 0 && inp[2] != 0 && inp[3] != 0 && inp[4] != 0
		&& inp[5] != 0 && inp[6] != 0 && inp[7] != 0 && inp[8] != 0) return 0;    //»Áπ˚ÃÓ¬˙£¨µ›πÈΩ· ¯

	for (i = 0; i < 8; i++) way[i] = 0; j = 0;
	for (i = 1; i <= 8; i++)    //’“µΩÀ˘”–ø’∏Ò
		if (inp[i] == 0) way[j++] = i;
	for (i = 0; i < 8; i++)    
	{
		if (way[i] != 0)    //±È¿˙À˘”–ø’∏Ò
		{
			for (j = -1; j <= 1; j += 2)    //±È¿˙À˘”–¬‰◊”∑Ω∑®
			{
				for (k = 0; k < 10; k++) temp[k] = inp[k];    //±∏∑›
				move_edge(inp, way[i], j);    //¬‰◊”
				for (k = 1; k <= 8; k++)    
					if (inp[k] != edge[k]) stable[k] = 0;    //º«¬º±ª∑≠◊™µƒ◊”
				stable_it(inp, edge);    //œ¬“ª≤Ω
				for (k = 0; k < 10; k++) inp[k] = temp[k];    //ªπ‘≠
			}
		}
	}
	return 0;
}

void GenerateStable()
{
	//…˙≥…stable_b.txt∫Õstable_w.txt£¨∑÷±º«¬º3^8÷÷±ﬂµƒ≈‰÷√µƒ∫⁄∞◊Œ»∂®◊”∏ˆ ˝
	//ofstream out_b("stable_b.txt");
	//ofstream out_w("stable_w.txt"); 
	ofstream out("stable.dat");
	int edge_temp[10], a, b, c, d, e, f, g, h, i, count_b = 0, count_w = 0;
	for (a = -1; a <= 1; a++)
	{
		for (b = -1; b <= 1; b++)
		{
			for (c = -1; c <= 1; c++)
			{
				for (d = -1; d <= 1; d++)
				{
					for (e = -1; e <= 1; e++)
					{
						for (f = -1; f <= 1; f++)
						{
							for (g = -1; g <= 1; g++)
							{
								for (h = -1; h <= 1; h++)    //±È¿˙À˘”–±ﬂµƒ«Èøˆ3^8÷÷
								{
									edge[1] = a;
									edge[2] = b;
									edge[3] = c;
									edge[4] = d;
									edge[5] = e;
									edge[6] = f;
									edge[7] = g;
									edge[8] = h;
									for (i = 1; i <= 8; i++) stable[i] = 1;    //≥ı ºªØÀ˘”–∂º «Œ»∂®◊”
									for (i = 0; i < 10; i++) edge_temp[i] = edge[i];    //∏¥÷∆≥ı ºµƒ±ﬂ
									count_b = 0; count_w = 0;
									stable_it(edge_temp, edge);    
									for (i = 1; i <= 8; i++)
									{
										if (edge[i] == black && stable[i] == 1) count_b++;    //∫⁄…´Œ»∂®◊”∏ˆ ˝
										if (edge[i] == white && stable[i] == 1) count_w++;    //∞◊…´Œ»∂®◊”∏ˆ ˝
									}
									//out_b << count_b;
									//out_w << count_w;
									out << count_b << count_w;
								}
							}
						}
					}
				}
			}
		}
	}
	//out_b.close();
	//out_w.close();
	out.close();
	cout << "Done!" << endl;
}

int main()
{
	GenerateStable();
	//ifstream in_b("stable_b.txt");
	//ifstream in_w("stable_w.txt");
	//int x = 0;
	//for (x = 0; x < 6561; x++)
	//{
	//	stable_b[x] = in_b.get() - '0';
	//	stable_w[x] = in_w.get() - '0';
	//}
	////“‘…œ «≥ı ºªØ

	//ofstream out("55-56.txt");
	//double i, j, k, m, n;
	//double count = 0, s1 = 0, s2 = 0, s3 = 0, s4 = 0, s5 = 0;
	//for (i = 1; i <= 20; i++)
	//{
	//	for (j = 1; j <= 20; j++)
	//	{
	//		for (k = 1; k <= 20; k++)
	//		{
	//			for (m = 1; m <= 20; m++)
	//			{
	//				for (n = 1; n <= 20; n++)
	//				{
	//					p_mob = i / (i + j + k + m + n);
	//					p_div = j / (i + j + k + m + n);
	//					p_squ = k / (i + j + k + m + n);
	//					p_fro = m / (i + j + k + m + n);
	//					p_sta = n / (i + j + k + m + n);
	//					if (p_mob > 2 * p_div && p_mob > 2 * p_squ && p_mob > 2 * p_fro
	//						&& p_sta > 2 * p_div && p_sta > 2 * p_squ && p_sta > 2 * p_fro
	//						&& evaluate(board155) > -150 && evaluate(board155) < 150
	//						&& evaluate(board156) > -150 && evaluate(board156) < 150)
	//					{
	//						count++;
	//						s1 += p_mob;
	//						s2 += p_div;
	//						s3 += p_squ;
	//						s4 += p_fro;
	//						s5 += p_sta;
	//						out << fixed << setprecision(2) << p_mob << "  " << p_div << "  " << p_squ << "  " << p_fro << "  " << p_sta << endl;
	//					}
	//				}
	//			}
	//		}
	//	}
	//}
	//cout << fixed << setprecision(2) << s1 / count << "  " << s2 / count << "  " << s3 / count << "  " << s4 / count << "  " << s5 / count << endl;

	/*p_mob = 0.00;
	p_div = 0.00;
	p_squ = 0.00;
	p_fro = 1;
	p_sta = 0;
	cout << evaluate(board133) << endl;
	cout << evaluate(board134) << endl;*/

	//cout << "Done!";
	getchar();
	return 0;
}